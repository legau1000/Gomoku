#!/usr/bin/env python3 

import sys
import threading
from Class import MyGame

map = []
map_size = 0

def add_opposite_play_to(coord):
    print(coord)
    if (coord != "DONE"):
        list_coord = coord.split(",")
        if (len(list_coord) != 3):
            map[int(list_coord[0]) - 1][int(list_coord[1]) - 1] = '2'
        else:
            map[int(list_coord[0]) - 1][int(list_coord[1]) - 1] = list_coord[2]

def WriteText(string):
    print(string)
    sys.stdout.flush()

def process_command(command_array, MyBoard, EnnemyBoard):
    if (command_array[0] == "TURN"):
        add_opposite_play_to(command_array[1])
        #algo_min_max
    elif (command_array[0] == "BOARD"):
        while (command_array != "DONE"):
            command_array = input()
            add_opposite_play_to(command_array)
    elif (command_array[0] == "BEGIN"):
        # First move at the middle
        MyBoard.addMyMouve(int(MyBoard.GetSize() / 2), int(MyBoard.GetSize() / 2))
        EnnemyBoard.addEnemyMouve(int(EnnemyBoard.GetSize() / 2), int(EnnemyBoard.GetSize() / 2))
        WriteText(str(int(EnnemyBoard.GetSize() / 2)) + "," + str(int(EnnemyBoard.GetSize() / 2)))
        #MyBoard.PrintMap()
        #EnnemyBoard.PrintMap()
    elif (command_array[0] == "ABOUT"):
        WriteText("name=\"ui\", version=\"0.1.1\", author=\"Mananka && legau1000\", country=\"FRANCE\"")
    else:
        WriteText("UNKNOWN Unknow command. Try again!")

def StartGame(MyBoard, EnnemyBoard):
    command_array = SplitInput()
    process_command(command_array, MyBoard, EnnemyBoard)

def SplitInput():
    command = input()
    command_array = command.split(" ")
    if (command_array[0] == "END"):
        sys.exit(0)
    return command_array

def MyThread(ClassGame, val):
    ClassGame.SetValue(val)

def StartFunctionGame():
    try:
        command_array = SplitInput()
        if (command_array[0] == "START"):
            if (int(command_array[1]) >= 5):
                WriteText("OK")
                return (int(command_array[1]))
            else:
                WriteText("ERROR message - unsupported size or other error")
                sys.exit(84)
    except:
        WriteText("ERROR message - unsupported size or other error")
        sys.exit(84)

if __name__ == "__main__":
#    GameTwo = MyGame()
#    TabThread = []
#    TabThread.append(threading.Thread(target=MyThread, args=(Game, 10)))
#    TabThread.append(threading.Thread(target=MyThread, args=(GameTwo, 5)))
#    TabThread[0].start()
#    TabThread[1].start()
#    for index in range(2):
#        TabThread[index].join()
#    File = open("C:\\Users\\legau1000\\Desktop\\IA\\guru99.txt", "w+")
#    File.write("Error link\n")
    end = 0
    size = int(StartFunctionGame())
    MyBoard = MyGame(size)
    EnnemyBoard = MyGame(size)
    while (1):
        StartGame(MyBoard, EnnemyBoard)
    sys.exit(0)